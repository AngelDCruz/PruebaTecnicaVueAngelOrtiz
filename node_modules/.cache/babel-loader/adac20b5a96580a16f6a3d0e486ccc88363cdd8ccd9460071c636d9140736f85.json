{"ast":null,"code":"import * as Winwheel from './Winwheel';\nexport default {\n  name: 'VueWinWheel',\n  props: {\n    segments: {\n      default() {\n        return [{\n          textFillStyle: '#fff',\n          fillStyle: '#000',\n          text: 'Prize 1'\n        }, {\n          textFillStyle: '#000',\n          fillStyle: '#fadede',\n          text: 'Prize 2'\n        }, {\n          textFillStyle: '#fff',\n          fillStyle: '#000',\n          text: 'Prize 3'\n        }, {\n          textFillStyle: '#000',\n          fillStyle: '#fadede',\n          text: 'Prize 4'\n        }, {\n          textFillStyle: '#fff',\n          fillStyle: '#000',\n          text: 'Prize 5'\n        }, {\n          textFillStyle: '#000',\n          fillStyle: '#fadede',\n          text: 'Prize 6'\n        }, {\n          textFillStyle: '#fff',\n          fillStyle: '#000',\n          text: 'Prize 7'\n        }, {\n          textFillStyle: '#000',\n          fillStyle: '#fadede',\n          text: 'Prize 8'\n        }];\n      }\n    }\n  },\n  data() {\n    return {\n      loadingPrize: false,\n      theWheel: null,\n      modalPrize: false,\n      wheelPower: 1,\n      wheelSpinning: false,\n      prizeName: 'BUY 1 GET 1',\n      WinWheelOptions: {\n        textFontSize: 14,\n        outterRadius: 410,\n        innerRadius: 25,\n        lineWidth: 8,\n        animation: {\n          type: 'spinOngoing',\n          duration: 0.5\n        }\n      }\n    };\n  },\n  methods: {\n    showPrize() {\n      this.modalPrize = true;\n    },\n    hidePrize() {\n      this.modalPrize = false;\n    },\n    startSpin() {\n      if (this.wheelSpinning === false) {\n        this.theWheel.startAnimation();\n        this.wheelSpinning = true;\n        this.theWheel = new Winwheel.Winwheel({\n          ...this.WinWheelOptions,\n          numSegments: this.segments.length,\n          segments: this.segments,\n          animation: {\n            type: 'spinToStop',\n            duration: 5,\n            spins: 5,\n            callbackFinished: this.onFinishSpin\n          }\n        });\n\n        // example input prize number get from Backend\n        // Important thing is to set the stopAngle of the animation before stating the spin.\n\n        var prizeNumber = Math.floor(Math.random() * this.segments.length); // or just get from Backend\n        var stopAt = 360 / this.segments.length * prizeNumber - 360 / this.segments.length / 2; // center pin\n        // var stopAt = 360 / this.segments.length * prizeNumber - Math.floor(Math.random() * 60) //random location\n        this.theWheel.animation.stopAngle = stopAt;\n        this.theWheel.startAnimation();\n        this.wheelSpinning = false;\n      }\n    },\n    resetWheel() {\n      this.theWheel = new Winwheel.Winwheel({\n        ...this.WinWheelOptions,\n        numSegments: this.segments.length,\n        segments: this.segments\n      });\n      if (this.wheelSpinning) {\n        this.theWheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\n      }\n\n      this.theWheel.rotationAngle = 0; // Re-set the wheel angle to 0 degrees.\n      this.theWheel.draw(); // Call draw to render changes to the wheel.\n      this.wheelSpinning = false; // Reset to false to power buttons and spin can be clicked again.\n    },\n\n    initSpin() {\n      this.loadingPrize = true;\n      this.resetWheel();\n      this.loadingPrize = false;\n    },\n    onFinishSpin(indicatedSegment) {\n      this.prizeName = indicatedSegment.text;\n      this.showPrize();\n    }\n  },\n  computed: {},\n  updated() {},\n  mounted() {\n    this.initSpin();\n    // this.resetWheel()\n  },\n\n  created() {}\n};","map":{"version":3,"names":["Winwheel","name","props","segments","default","textFillStyle","fillStyle","text","data","loadingPrize","theWheel","modalPrize","wheelPower","wheelSpinning","prizeName","WinWheelOptions","textFontSize","outterRadius","innerRadius","lineWidth","animation","type","duration","methods","showPrize","hidePrize","startSpin","startAnimation","numSegments","length","spins","callbackFinished","onFinishSpin","prizeNumber","Math","floor","random","stopAt","stopAngle","resetWheel","stopAnimation","rotationAngle","draw","initSpin","indicatedSegment","computed","updated","mounted","created"],"sources":["node_modules/vue-winwheel/vue-winwheel.vue"],"sourcesContent":["<template>\n\t\t<section class=\"vue-winwheel\">\n\t\t\t<div class=\"mobile-container\">\n\t\t\t\t<h1>Vue-Winwheel</h1>\n\t\t\t\t<div class=\"wheel-wrapper\">\n\t\t\t\t\t<div class=\"canvas-wrapper\">\n\t\t\t\t\t\t<canvas id=\"canvas\" width=\"310\" height=\"310\">\n\t\t\t\t\t\t\t<p style=\"{color: white}\" align=\"center\">Sorry, your browser doesn't support canvas. Please try Google Chrome.</p>\n\t\t\t\t\t\t</canvas>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"button-wrapper\">\n\t\t\t\t\t\t<a class=\"btn btn-play\" href=\"#\" @click.prevent=\"startSpin()\" v-if=\"!loadingPrize && !wheelSpinning\">SPIN!</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"custom-modal modal-mask\" id=\"modalSpinwheel\" v-if=\"modalPrize\">\n\t\t\t\t<div slot=\"body\">\n\t\t\t\t\t<a href=\"\" @click.prevent=\"hidePrize()\" class=\"modal-dismiss\">\n\t\t\t\t\t\t<i class=\"icon_close\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tYay you got the prize!!\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h1> {{prizeName}}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n</template>\n\n\n<script>\nimport * as Winwheel from './Winwheel'\n\nexport default {\n  name: 'VueWinWheel',\n  props:{\n\t\tsegments:{\n\t\t\tdefault(){\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#fff',\n\t\t\t\t\t\tfillStyle: '#000',\n\t\t\t\t\t\ttext:'Prize 1'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#000',\n\t\t\t\t\t\tfillStyle: '#fadede',\n\t\t\t\t\t\ttext:'Prize 2'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#fff',\n\t\t\t\t\t\tfillStyle: '#000',\n\t\t\t\t\t\ttext:'Prize 3'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#000',\n\t\t\t\t\t\tfillStyle: '#fadede',\n\t\t\t\t\t\ttext:'Prize 4'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#fff',\n\t\t\t\t\t\tfillStyle: '#000',\n\t\t\t\t\t\ttext:'Prize 5'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#000',\n\t\t\t\t\t\tfillStyle: '#fadede',\n\t\t\t\t\t\ttext:'Prize 6'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#fff',\n\t\t\t\t\t\tfillStyle: '#000',\n\t\t\t\t\t\ttext:'Prize 7'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttextFillStyle: '#000',\n\t\t\t\t\t\tfillStyle: '#fadede',\n\t\t\t\t\t\ttext:'Prize 8'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n  },\n  data () {\n    return {\n      loadingPrize: false,\n      theWheel: null,\n      modalPrize: false,\n      wheelPower: 1,\n      wheelSpinning: false,\n      prizeName: 'BUY 1 GET 1',\n      WinWheelOptions: {\n        textFontSize: 14,\n        outterRadius: 410,\n        innerRadius: 25,\n        lineWidth: 8,\n        animation: {\n          type: 'spinOngoing',\n          duration: 0.5\n        }\n      }\n    }\n  },\n  methods: {\n    showPrize () {\n      this.modalPrize = true\n    },\n    hidePrize () {\n      this.modalPrize = false\n    },\n    startSpin () {\n      if (this.wheelSpinning === false) {\n        this.theWheel.startAnimation()\n        this.wheelSpinning = true\n        this.theWheel = new Winwheel.Winwheel({\n          ...this.WinWheelOptions,\n          numSegments: this.segments.length,\n          segments: this.segments,\n          animation: {\n            type: 'spinToStop',\n            duration: 5,\n            spins: 5,\n            callbackFinished: this.onFinishSpin\n          }\n        })\n\n        // example input prize number get from Backend\n        // Important thing is to set the stopAngle of the animation before stating the spin.\n\n        var prizeNumber = Math.floor(Math.random() * this.segments.length) // or just get from Backend\n        var stopAt = 360 / this.segments.length * prizeNumber - 360 / this.segments.length / 2 // center pin\n        // var stopAt = 360 / this.segments.length * prizeNumber - Math.floor(Math.random() * 60) //random location\n        this.theWheel.animation.stopAngle = stopAt\n        this.theWheel.startAnimation()\n        this.wheelSpinning = false\n      }\n    },\n    resetWheel () {\n      this.theWheel = new Winwheel.Winwheel({\n        ...this.WinWheelOptions,\n        numSegments: this.segments.length,\n        segments: this.segments\n      })\n\n      if (this.wheelSpinning) {\n        this.theWheel.stopAnimation(false) // Stop the animation, false as param so does not call callback function.\n      }\n\n      this.theWheel.rotationAngle = 0 // Re-set the wheel angle to 0 degrees.\n      this.theWheel.draw() // Call draw to render changes to the wheel.\n      this.wheelSpinning = false // Reset to false to power buttons and spin can be clicked again.\n    },\n    initSpin () {\n      this.loadingPrize = true\n            this.resetWheel()\n            this.loadingPrize = false\n    },\n    onFinishSpin (indicatedSegment) {\n      this.prizeName = indicatedSegment.text\n      this.showPrize()\n    }\n  },\n  computed: {},\n  updated () {},\n  mounted () {\n    this.initSpin()\n    // this.resetWheel()\n  },\n  created () {}\n}\n\n</script>\n\n<style scoped>\n.vue-winwheel {\n\ttext-align: center;\n\tbackground-image: url('/static/img/obstacle-run/bg-spinner-mobile.svg');\n\tbackground-size: cover;\n\tbackground-position: center bottom;\n\tbackground-repeat: no-repeat;\n}\n.vue-winwheel h1 {\n\tcolor: #b32656;\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\tfont-size: 36px;\n\tline-height: 90px;\n\tletter-spacing: 4px;\n\tmargin: 0;\n}\n.vue-winwheel h2 {\n\tmargin: 0;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content {\n\twidth: calc(100vw - 30px);\n\tpadding-top: 52px;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content h2 {\n\ttext-transform: uppercase;\n\tcolor: #b32656;\n\tmargin-bottom: 16px;\n\tmargin-top: 0;\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\tfont-size: 18px;\n\tletter-spacing: 1.1px;\n\tmargin: 0;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content p {\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\tfont-size: 14px;\n\tcolor: black;\n\ttext-align: center;\n\tline-height: 25px;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content p strong {\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content .modal-dismiss {\n\ttop: 12px;\n\tright: 12px;\n}\n.vue-winwheel #modalSpinwheel.custom-modal .content-wrapper .content .modal-dismiss i.icon_close {\n\tfont-size: 30px;\n\tcolor: #da2a52;\n}\n.vue-winwheel canvas#canvas {\n\tposition: relative;\n}\n.vue-winwheel .canvas-wrapper {\n\tposition: relative;\n}\n.vue-winwheel .canvas-wrapper:after {\n\tcontent: '';\n\tdisplay: block;\n\twidth: 42px;\n\tbackground: #c4376f;\n\theight: 42px;\n\tposition: absolute;\n\tleft: calc(50% - 25px);\n\tmargin: auto;\n\tborder-radius: 100%;\n\ttop: calc(50% - 29px);\n\tborder: 5px solid white;\n\tbox-sizing: content-box;\n}\n.vue-winwheel .canvas-wrapper:before {\n\tcontent: '';\n\tdisplay: block;\n\twidth: 310px;\n\tbackground: #0f0f0f;\n\theight: 310px;\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tmargin: 0 auto;\n\tborder-radius: 100%;\n\ttop: 0;\n}\n.vue-winwheel .wheel-wrapper {\n\tposition: relative;\n}\n.vue-winwheel .wheel-wrapper:before {\n\tcontent: '';\n\twidth: 62px;\n\theight: 47px;\n\tposition: absolute;\n\ttop: -10px;\n\tleft: calc(50% - 31px);\n\tright: 0;\n\tdisplay: block;\n\tz-index: 99999;\n\tbackground-image: url('./spinner-marker.svg');\n\tbackground-repeat: no-repeat;\n\tbackground-size: contain;\n\tbackground-position: center;\n}\n.vue-winwheel .wheel-wrapper .button-wrapper {\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 231px;\n\theight: 118px;\n}\n.vue-winwheel .wheel-wrapper .btn.btn-play {\n\tpadding: 0 58px !important;\n\tbackground: #c4376f;\n\theight: 40px;\n\tline-height: 40px;\n\tcolor: white;\n\tfont-weight: bold;\n\ttext-decoration: none;\n\tborder-radius: 2px;\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\tletter-spacing: 2px;\n}\n</style>\n"],"mappings":"AA+BA,YAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA;MACAC,QAAA;QACA,QACA;UACAC,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,GACA;UACAF,aAAA;UACAC,SAAA;UACAC,IAAA;QACA,EACA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,QAAA;MACAC,UAAA;MACAC,UAAA;MACAC,aAAA;MACAC,SAAA;MACAC,eAAA;QACAC,YAAA;QACAC,YAAA;QACAC,WAAA;QACAC,SAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAb,UAAA;IACA;IACAc,UAAA;MACA,KAAAd,UAAA;IACA;IACAe,UAAA;MACA,SAAAb,aAAA;QACA,KAAAH,QAAA,CAAAiB,cAAA;QACA,KAAAd,aAAA;QACA,KAAAH,QAAA,OAAAV,QAAA,CAAAA,QAAA;UACA,QAAAe,eAAA;UACAa,WAAA,OAAAzB,QAAA,CAAA0B,MAAA;UACA1B,QAAA,OAAAA,QAAA;UACAiB,SAAA;YACAC,IAAA;YACAC,QAAA;YACAQ,KAAA;YACAC,gBAAA,OAAAC;UACA;QACA;;QAEA;QACA;;QAEA,IAAAC,WAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAjC,QAAA,CAAA0B,MAAA;QACA,IAAAQ,MAAA,cAAAlC,QAAA,CAAA0B,MAAA,GAAAI,WAAA,cAAA9B,QAAA,CAAA0B,MAAA;QACA;QACA,KAAAnB,QAAA,CAAAU,SAAA,CAAAkB,SAAA,GAAAD,MAAA;QACA,KAAA3B,QAAA,CAAAiB,cAAA;QACA,KAAAd,aAAA;MACA;IACA;IACA0B,WAAA;MACA,KAAA7B,QAAA,OAAAV,QAAA,CAAAA,QAAA;QACA,QAAAe,eAAA;QACAa,WAAA,OAAAzB,QAAA,CAAA0B,MAAA;QACA1B,QAAA,OAAAA;MACA;MAEA,SAAAU,aAAA;QACA,KAAAH,QAAA,CAAA8B,aAAA;MACA;;MAEA,KAAA9B,QAAA,CAAA+B,aAAA;MACA,KAAA/B,QAAA,CAAAgC,IAAA;MACA,KAAA7B,aAAA;IACA;;IACA8B,SAAA;MACA,KAAAlC,YAAA;MACA,KAAA8B,UAAA;MACA,KAAA9B,YAAA;IACA;IACAuB,aAAAY,gBAAA;MACA,KAAA9B,SAAA,GAAA8B,gBAAA,CAAArC,IAAA;MACA,KAAAiB,SAAA;IACA;EACA;EACAqB,QAAA;EACAC,QAAA;EACAC,QAAA;IACA,KAAAJ,QAAA;IACA;EACA;;EACAK,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}