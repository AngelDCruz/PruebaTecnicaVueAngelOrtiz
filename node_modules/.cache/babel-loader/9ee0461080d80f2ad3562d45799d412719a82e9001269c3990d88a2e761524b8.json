{"ast":null,"code":"export default {\n  name: \"ruleta-juego\",\n  data() {\n    return {\n      theWheel: {}\n    };\n  },\n  mounted() {},\n  methods: {\n    init() {\n      // Create new wheel object specifying the parameters at creation time.\n      this.theWheel = new Winwheel({\n        wheelPower: 0,\n        wheelSpinning: false,\n        datos: {\n          numSegments: 8,\n          outerRadius: 212,\n          textFontSize: 28,\n          segments: [{\n            fillStyle: \"#eae56f\",\n            text: \"Prize 1\"\n          }, {\n            fillStyle: \"#89f26e\",\n            text: \"Prize 2\"\n          }, {\n            fillStyle: \"#7de6ef\",\n            text: \"Prize 3\"\n          }, {\n            fillStyle: \"#e7706f\",\n            text: \"Prize 4\"\n          }, {\n            fillStyle: \"#eae56f\",\n            text: \"Prize 5\"\n          }, {\n            fillStyle: \"#89f26e\",\n            text: \"Prize 6\"\n          }, {\n            fillStyle: \"#7de6ef\",\n            text: \"Prize 7\"\n          }, {\n            fillStyle: \"#e7706f\",\n            text: \"Prize 8\"\n          }],\n          // Specify the animation to use.\n          animation: {\n            type: \"spinToStop\",\n            duration: 5,\n            // Duration in seconds.\n            spins: 8,\n            // Number of complete spins.\n            callbackFinished: this.alertPrize()\n          }\n        }\n      });\n\n      // Vars used by the code in this page to do power controls.\n    },\n\n    startSpin() {\n      // Ensure that spinning can't be clicked again while already running.\n      if (this.wheelSpinning == false) {\n        // Based on the power level selected adjust the number of spins for the wheel, the more times is has\n        // to rotate with the duration of the animation the quicker the wheel spins.\n        if (this.wheelPower == 1) {\n          this.theWheel.animation.spins = 3;\n        } else if (this.wheelPower == 2) {\n          this.theWheel.animation.spins = 8;\n        } else if (this.wheelPower == 3) {\n          this.theWheel.animation.spins = 15;\n        }\n\n        // Disable the spin button so can't click again while wheel is spinning.\n        document.getElementById(\"spin_button\").src = \"spin_off.png\";\n        document.getElementById(\"spin_button\").className = \"\";\n\n        // Begin the spin animation by calling startAnimation on the wheel object.\n        this.theWheel.startAnimation();\n\n        // Set to true so that power can't be changed and spin button re-enabled during\n        // the current animation. The user will have to reset before spinning again.\n        this.wheelSpinning = true;\n      }\n    },\n    alertPrize(indicatedSegment) {\n      // Do basic alert of the segment text. You would probably want to do something more interesting with this information.\n      alert(\"You have won \" + indicatedSegment.text);\n    },\n    powerSelected(powerLevel) {\n      // Ensure that power can't be changed while wheel is spinning.\n      if (this.wheelSpinning == false) {\n        // Reset all to grey incase this is not the first time the user has selected the power.\n        document.getElementById(\"pw1\").className = \"\";\n        document.getElementById(\"pw2\").className = \"\";\n        document.getElementById(\"pw3\").className = \"\";\n\n        // Now light up all cells below-and-including the one selected by changing the class.\n        if (powerLevel >= 1) {\n          document.getElementById(\"pw1\").className = \"pw1\";\n        }\n        if (powerLevel >= 2) {\n          document.getElementById(\"pw2\").className = \"pw2\";\n        }\n        if (powerLevel >= 3) {\n          document.getElementById(\"pw3\").className = \"pw3\";\n        }\n\n        // Set wheelPower var used when spin button is clicked.\n        this.wheelPower = powerLevel;\n\n        // Light up the spin button by changing it's source image and adding a clickable class to it.\n        document.getElementById(\"spin_button\").src = \"spin_on.png\";\n        document.getElementById(\"spin_button\").className = \"clickable\";\n      }\n    },\n    resetWheel() {\n      this.theWheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\n      this.theWheel.rotationAngle = 0; // Re-set the wheel angle to 0 degrees.\n      this.theWheel.draw(); // Call draw to render changes to the wheel.\n\n      document.getElementById(\"pw1\").className = \"\"; // Remove all colours from the power level indicators.\n      document.getElementById(\"pw2\").className = \"\";\n      document.getElementById(\"pw3\").className = \"\";\n      this.wheelSpinning = false; // Reset to false to power buttons and spin can be clicked again.\n    }\n  }\n};","map":{"version":3,"names":["name","data","theWheel","mounted","methods","init","Winwheel","wheelPower","wheelSpinning","datos","numSegments","outerRadius","textFontSize","segments","fillStyle","text","animation","type","duration","spins","callbackFinished","alertPrize","startSpin","document","getElementById","src","className","startAnimation","indicatedSegment","alert","powerSelected","powerLevel","resetWheel","stopAnimation","rotationAngle","draw"],"sources":["src/components/ruleta-indicador.vue"],"sourcesContent":["<template>\r\n  <div align=\"center\">\r\n    <h1>Winwheel.js example wheel - basic code wheel</h1>\r\n    <p>\r\n      Here is an example of a basic code drawn wheel which spins to a stop with\r\n      the prize won alerted to the user.\r\n    </p>\r\n    <br />\r\n    <p>\r\n      Choose a power setting then press the Spin button. You will be alerted to\r\n      the prize won when the spinning stops.\r\n    </p>\r\n    <br />\r\n    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n      <tr>\r\n        <td>\r\n          <div class=\"power_controls\">\r\n            <br />\r\n            <br />\r\n            <table class=\"power\" cellpadding=\"10\" cellspacing=\"0\">\r\n              <tr>\r\n                <th align=\"center\">Power</th>\r\n              </tr>\r\n              <tr>\r\n                <td\r\n                  width=\"78\"\r\n                  align=\"center\"\r\n                  id=\"pw3\"\r\n                  onClick=\"powerSelected(3);\"\r\n                >\r\n                  High\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" id=\"pw2\" onClick=\"powerSelected(2);\">Med</td>\r\n              </tr>\r\n              <tr>\r\n                <td align=\"center\" id=\"pw1\" onClick=\"powerSelected(1);\">Low</td>\r\n              </tr>\r\n            </table>\r\n            <br />\r\n            <img\r\n              id=\"spin_button\"\r\n              src=\"spin_off.png\"\r\n              alt=\"Spin\"\r\n              onClick=\"startSpin();\"\r\n            />\r\n            <br /><br />\r\n            &nbsp;&nbsp;<a href=\"#\" onClick=\"resetWheel(); return false;\"\r\n              >Play Again</a\r\n            ><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(reset)\r\n          </div>\r\n        </td>\r\n        <td\r\n          width=\"438\"\r\n          height=\"582\"\r\n          class=\"the_wheel\"\r\n          align=\"center\"\r\n          valign=\"center\"\r\n        >\r\n          <canvas id=\"canvas\" width=\"434\" height=\"434\">\r\n            <p\r\n              style=\"\r\n                 {\r\n                  color: white;\r\n                }\r\n              \"\r\n              align=\"center\"\r\n            >\r\n              Sorry, your browser doesn't support canvas. Please try another.\r\n            </p>\r\n          </canvas>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ruleta-juego\",\r\n\r\n  data() {\r\n    return {\r\n      theWheel: {},\r\n    };\r\n  },\r\n\r\n  mounted() {},\r\n\r\n  methods: {\r\n    init() {\r\n      // Create new wheel object specifying the parameters at creation time.\r\n      this.theWheel = new Winwheel({\r\n        wheelPower: 0,\r\n        wheelSpinning: false,\r\n        datos: {\r\n          numSegments: 8,\r\n          outerRadius: 212,\r\n          textFontSize: 28,\r\n          segments: [\r\n            { fillStyle: \"#eae56f\", text: \"Prize 1\" },\r\n            { fillStyle: \"#89f26e\", text: \"Prize 2\" },\r\n            { fillStyle: \"#7de6ef\", text: \"Prize 3\" },\r\n            { fillStyle: \"#e7706f\", text: \"Prize 4\" },\r\n            { fillStyle: \"#eae56f\", text: \"Prize 5\" },\r\n            { fillStyle: \"#89f26e\", text: \"Prize 6\" },\r\n            { fillStyle: \"#7de6ef\", text: \"Prize 7\" },\r\n            { fillStyle: \"#e7706f\", text: \"Prize 8\" },\r\n          ],\r\n          // Specify the animation to use.\r\n          animation: {\r\n            type: \"spinToStop\",\r\n            duration: 5, // Duration in seconds.\r\n            spins: 8, // Number of complete spins.\r\n            callbackFinished: this.alertPrize(),\r\n          },\r\n        },\r\n      });\r\n\r\n      // Vars used by the code in this page to do power controls.\r\n    },\r\n    startSpin() {\r\n      // Ensure that spinning can't be clicked again while already running.\r\n      if (this.wheelSpinning == false) {\r\n        // Based on the power level selected adjust the number of spins for the wheel, the more times is has\r\n        // to rotate with the duration of the animation the quicker the wheel spins.\r\n        if (this.wheelPower == 1) {\r\n          this.theWheel.animation.spins = 3;\r\n        } else if (this.wheelPower == 2) {\r\n          this.theWheel.animation.spins = 8;\r\n        } else if (this.wheelPower == 3) {\r\n          this.theWheel.animation.spins = 15;\r\n        }\r\n\r\n        // Disable the spin button so can't click again while wheel is spinning.\r\n        document.getElementById(\"spin_button\").src = \"spin_off.png\";\r\n        document.getElementById(\"spin_button\").className = \"\";\r\n\r\n        // Begin the spin animation by calling startAnimation on the wheel object.\r\n        this.theWheel.startAnimation();\r\n\r\n        // Set to true so that power can't be changed and spin button re-enabled during\r\n        // the current animation. The user will have to reset before spinning again.\r\n        this.wheelSpinning = true;\r\n      }\r\n    },\r\n    alertPrize(indicatedSegment) {\r\n      // Do basic alert of the segment text. You would probably want to do something more interesting with this information.\r\n      alert(\"You have won \" + indicatedSegment.text);\r\n    },\r\n    powerSelected(powerLevel) {\r\n      // Ensure that power can't be changed while wheel is spinning.\r\n      if (this.wheelSpinning == false) {\r\n        // Reset all to grey incase this is not the first time the user has selected the power.\r\n        document.getElementById(\"pw1\").className = \"\";\r\n        document.getElementById(\"pw2\").className = \"\";\r\n        document.getElementById(\"pw3\").className = \"\";\r\n\r\n        // Now light up all cells below-and-including the one selected by changing the class.\r\n        if (powerLevel >= 1) {\r\n          document.getElementById(\"pw1\").className = \"pw1\";\r\n        }\r\n\r\n        if (powerLevel >= 2) {\r\n          document.getElementById(\"pw2\").className = \"pw2\";\r\n        }\r\n\r\n        if (powerLevel >= 3) {\r\n          document.getElementById(\"pw3\").className = \"pw3\";\r\n        }\r\n\r\n        // Set wheelPower var used when spin button is clicked.\r\n        this.wheelPower = powerLevel;\r\n\r\n        // Light up the spin button by changing it's source image and adding a clickable class to it.\r\n        document.getElementById(\"spin_button\").src = \"spin_on.png\";\r\n        document.getElementById(\"spin_button\").className = \"clickable\";\r\n      }\r\n    },\r\n    resetWheel() {\r\n      this.theWheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\r\n      this.theWheel.rotationAngle = 0; // Re-set the wheel angle to 0 degrees.\r\n      this.theWheel.draw(); // Call draw to render changes to the wheel.\r\n\r\n      document.getElementById(\"pw1\").className = \"\"; // Remove all colours from the power level indicators.\r\n      document.getElementById(\"pw2\").className = \"\";\r\n      document.getElementById(\"pw3\").className = \"\";\r\n\r\n      this.wheelSpinning = false; // Reset to false to power buttons and spin can be clicked again.\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  font-family: arial;\r\n}\r\n\r\n/* Sets the background image for the wheel */\r\ntd.the_wheel {\r\n  background-image: url(./wheel_back.png);\r\n  background-position: center;\r\n  background-repeat: none;\r\n}\r\n\r\n/* Do some css reset on selected elements */\r\nh1,\r\np {\r\n  margin: 0;\r\n}\r\n\r\ndiv.power_controls {\r\n  margin-right: 70px;\r\n}\r\n\r\ndiv.html5_logo {\r\n  margin-left: 70px;\r\n}\r\n\r\n/* Styles for the power selection controls */\r\ntable.power {\r\n  background-color: #cccccc;\r\n  cursor: pointer;\r\n  border: 1px solid #333333;\r\n}\r\n\r\ntable.power th {\r\n  background-color: white;\r\n  cursor: default;\r\n}\r\n\r\ntd.pw1 {\r\n  background-color: #6fe8f0;\r\n}\r\n\r\ntd.pw2 {\r\n  background-color: #86ef6f;\r\n}\r\n\r\ntd.pw3 {\r\n  background-color: #ef6f6f;\r\n}\r\n\r\n/* Style applied to the spin button once a power has been selected */\r\n.clickable {\r\n  cursor: pointer;\r\n}\r\n\r\n/* Other misc styles */\r\n.margin_bottom {\r\n  margin-bottom: 5px;\r\n}\r\n</style>\r\n"],"mappings":"AA+EA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EAEAC,QAAA;EAEAC,OAAA;IACAC,KAAA;MACA;MACA,KAAAH,QAAA,OAAAI,QAAA;QACAC,UAAA;QACAC,aAAA;QACAC,KAAA;UACAC,WAAA;UACAC,WAAA;UACAC,YAAA;UACAC,QAAA,GACA;YAAAC,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,SAAA;YAAAC,IAAA;UAAA,EACA;UACA;UACAC,SAAA;YACAC,IAAA;YACAC,QAAA;YAAA;YACAC,KAAA;YAAA;YACAC,gBAAA,OAAAC,UAAA;UACA;QACA;MACA;;MAEA;IACA;;IACAC,UAAA;MACA;MACA,SAAAd,aAAA;QACA;QACA;QACA,SAAAD,UAAA;UACA,KAAAL,QAAA,CAAAc,SAAA,CAAAG,KAAA;QACA,gBAAAZ,UAAA;UACA,KAAAL,QAAA,CAAAc,SAAA,CAAAG,KAAA;QACA,gBAAAZ,UAAA;UACA,KAAAL,QAAA,CAAAc,SAAA,CAAAG,KAAA;QACA;;QAEA;QACAI,QAAA,CAAAC,cAAA,gBAAAC,GAAA;QACAF,QAAA,CAAAC,cAAA,gBAAAE,SAAA;;QAEA;QACA,KAAAxB,QAAA,CAAAyB,cAAA;;QAEA;QACA;QACA,KAAAnB,aAAA;MACA;IACA;IACAa,WAAAO,gBAAA;MACA;MACAC,KAAA,mBAAAD,gBAAA,CAAAb,IAAA;IACA;IACAe,cAAAC,UAAA;MACA;MACA,SAAAvB,aAAA;QACA;QACAe,QAAA,CAAAC,cAAA,QAAAE,SAAA;QACAH,QAAA,CAAAC,cAAA,QAAAE,SAAA;QACAH,QAAA,CAAAC,cAAA,QAAAE,SAAA;;QAEA;QACA,IAAAK,UAAA;UACAR,QAAA,CAAAC,cAAA,QAAAE,SAAA;QACA;QAEA,IAAAK,UAAA;UACAR,QAAA,CAAAC,cAAA,QAAAE,SAAA;QACA;QAEA,IAAAK,UAAA;UACAR,QAAA,CAAAC,cAAA,QAAAE,SAAA;QACA;;QAEA;QACA,KAAAnB,UAAA,GAAAwB,UAAA;;QAEA;QACAR,QAAA,CAAAC,cAAA,gBAAAC,GAAA;QACAF,QAAA,CAAAC,cAAA,gBAAAE,SAAA;MACA;IACA;IACAM,WAAA;MACA,KAAA9B,QAAA,CAAA+B,aAAA;MACA,KAAA/B,QAAA,CAAAgC,aAAA;MACA,KAAAhC,QAAA,CAAAiC,IAAA;;MAEAZ,QAAA,CAAAC,cAAA,QAAAE,SAAA;MACAH,QAAA,CAAAC,cAAA,QAAAE,SAAA;MACAH,QAAA,CAAAC,cAAA,QAAAE,SAAA;MAEA,KAAAlB,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}