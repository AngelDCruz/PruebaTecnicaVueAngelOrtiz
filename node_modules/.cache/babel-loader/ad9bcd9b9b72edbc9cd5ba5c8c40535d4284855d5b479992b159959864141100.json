{"ast":null,"code":"export default {\n  name: \"ruta-indicador\",\n  data() {\n    return {\n      numPartes: 15,\n      colores: [],\n      numeroAleatorioGanador: 0\n    };\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init() {},\n    colorsAleatorios() {\n      let random = Math.floor(Math.random() * 16777215).toString(16);\n      return `#${random}`;\n    },\n    setEstiloColorPorcentajeColor(parte) {\n      let grado = parte * this.calcularGrados;\n      return {\n        ...(parte <= 0 && {\n          left: \"20%\",\n          \"z-index\": 222,\n          background: \"#E2EB12 !important\"\n        }),\n        ...(parte == 2 && {\n          \"z-index\": 223\n        }),\n        ...(parte > 0 && {\n          background: `${this.esNumeroImpar(parte)} !important`\n        }),\n        transform: `rotate(${grado}deg) !important`\n      };\n    },\n    emitir() {\n      this.numeroAleatorioGanador = Math.ceil(Math.random() * 1000);\n      this.numeroAleatorioGanador += Math.ceil(Math.random() * 1000);\n      this.numeroAleatorioGanador += Math.ceil(Math.random() * 1000);\n    },\n    esNumeroImpar(numero) {\n      return numero % 2 == 0 ? '#D73222' : '#4B4453';\n    }\n  },\n  computed: {\n    calcularGrados() {\n      return 360 / this.numPartes;\n    },\n    girarContenedor() {\n      return {\n        transform: `rotate(${this.numeroAleatorioGanador ?? 0}deg)`\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","numPartes","colores","numeroAleatorioGanador","mounted","init","methods","colorsAleatorios","random","Math","floor","toString","setEstiloColorPorcentajeColor","parte","grado","calcularGrados","left","background","esNumeroImpar","transform","emitir","ceil","numero","computed","girarContenedor"],"sources":["src/components/ruleta-indicador.vue"],"sourcesContent":["<template>\r\n  <div class=\"contenedor__indicador\" :style=\"girarContenedor\">\r\n    <div\r\n      class=\"indicador__item\"\r\n      v-for=\"elem of numPartes\"\r\n      :key=\"elem\"\r\n      :style=\"setEstiloColorPorcentajeColor(elem - 1)\"\r\n    >\r\n      {{ elem }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ruta-indicador\",\r\n\r\n  data() {\r\n    return {\r\n      numPartes: 15,\r\n      colores: [],\r\n      numeroAleatorioGanador: 0,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.init();\r\n  },\r\n\r\n  methods: {\r\n    init() {\r\n      \r\n    },\r\n    colorsAleatorios() {\r\n      let random = Math.floor(Math.random() * 16777215).toString(16);\r\n      return `#${random}`;\r\n    },\r\n    setEstiloColorPorcentajeColor(parte) {\r\n      let grado = parte * this.calcularGrados;\r\n\r\n      return {\r\n        ...(parte <= 0) && {\r\n          left: \"20%\",\r\n          \"z-index\": 222,\r\n          \r\n          background: \"#E2EB12 !important\"\r\n        },\r\n        ...(parte == 2) && {\r\n           \"z-index\": 223,\r\n        },\r\n        ...(parte > 0) && {\r\n          background: `${this.esNumeroImpar(parte)} !important`\r\n        },\r\n        transform: `rotate(${grado}deg) !important`,\r\n      };\r\n    },\r\n    emitir() {\r\n      this.numeroAleatorioGanador = Math.ceil(Math.random() * 1000);\r\n      this.numeroAleatorioGanador += Math.ceil(Math.random() * 1000);\r\n      this.numeroAleatorioGanador += Math.ceil(Math.random() * 1000);\r\n    },\r\n    esNumeroImpar(numero){\r\n      return numero % 2 == 0 ? '#D73222' : '#4B4453';\r\n    }\r\n  },\r\n  computed: {\r\n    calcularGrados() {\r\n      return 360 / this.numPartes;\r\n    },\r\n    girarContenedor() {\r\n      return {\r\n        transform: `rotate(${this.numeroAleatorioGanador ?? 0}deg)`,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.contenedor__indicador {\r\n  background: #ffffff;\r\n  border-radius: 50%;\r\n  border: 1px solid #444;\r\n  outline: 1px solid #444;\r\n  height: 500px;\r\n  width: 500px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  transition: 5s ease;\r\n}\r\n.contenedor__indicador div {\r\n  height: 50%;\r\n  width: 300px;\r\n  clip-path: polygon(100% 0, 50% 100%, 0 0) !important;\r\n  transform: translateX(-50%)  !important;\r\n  transform-origin: bottom  !important;\r\n  position: absolute;\r\n  left: 20%;\r\n  display: flex  !important;\r\n  justify-content: center  !important;\r\n  align-items: center  !important;\r\n  text-align: center  !important;\r\n  color: #fff !important;\r\n  font-size: 1em !important;\r\n}\r\n.contenedor__accionador {\r\n  padding: 20px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAcA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,sBAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,KAAA,GAEA;IACAE,iBAAA;MACA,IAAAC,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAD,MAAA,eAAAG,QAAA;MACA,WAAAH,MAAA;IACA;IACAI,8BAAAC,KAAA;MACA,IAAAC,KAAA,GAAAD,KAAA,QAAAE,cAAA;MAEA;QACA,IAAAF,KAAA;UACAG,IAAA;UACA;UAEAC,UAAA;QACA;QACA,IAAAJ,KAAA;UACA;QACA;QACA,IAAAA,KAAA;UACAI,UAAA,UAAAC,aAAA,CAAAL,KAAA;QACA;QACAM,SAAA,YAAAL,KAAA;MACA;IACA;IACAM,OAAA;MACA,KAAAjB,sBAAA,GAAAM,IAAA,CAAAY,IAAA,CAAAZ,IAAA,CAAAD,MAAA;MACA,KAAAL,sBAAA,IAAAM,IAAA,CAAAY,IAAA,CAAAZ,IAAA,CAAAD,MAAA;MACA,KAAAL,sBAAA,IAAAM,IAAA,CAAAY,IAAA,CAAAZ,IAAA,CAAAD,MAAA;IACA;IACAU,cAAAI,MAAA;MACA,OAAAA,MAAA;IACA;EACA;EACAC,QAAA;IACAR,eAAA;MACA,kBAAAd,SAAA;IACA;IACAuB,gBAAA;MACA;QACAL,SAAA,iBAAAhB,sBAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}