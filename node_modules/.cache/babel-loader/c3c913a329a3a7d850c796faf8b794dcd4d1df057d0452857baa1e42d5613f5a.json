{"ast":null,"code":"import ruletaDatos from \"@/components/ruleta-datos.vue\";\nimport ruletaJuego from \"@/components/ruleta-indicador.vue\";\nexport default {\n  name: \"ruleta-juego\",\n  components: {\n    ruletaDatos,\n    ruletaJuego\n  },\n  data() {\n    return {\n      datosEmitidos: {\n        color: \"S/A\",\n        numero: 0\n      },\n      colores: [\"#C34A36\", \"#4B4453\"],\n      datosGanadores: {\n        color: null,\n        numero: null,\n        esPar: null\n      }\n    };\n  },\n  methods: {\n    datosEmitidosEvento(datos) {\n      this.datosGanadores = {};\n      this.datosEmitidos = datos;\n      let numGanador = this.generarNumAleatorio();\n      let colorGanador = this.generarNumAleatorioParaColores();\n      let esParGanador = this.esPar(numGanador);\n      console.log(datos.esPar);\n      console.log(esParGanador);\n      if (numGanador == datos.numero) this.datosGanadores.numero = numGanador;\n      if (colorGanador == datos.color) this.datosGanadores.color = colorGanador;\n      if (esParGanador == datos.esPar) this.datosGanadores.esPar = datos.esPar;\n      let grados = this.calcularGrados(numGanador);\n      this.$refs.ruletaTablero.iniciarJuego(grados, () => {\n        setTimeout(() => {\n          this.validarPremio();\n        }, 2100);\n      });\n    },\n    generarNumAleatorio() {\n      return Math.ceil(Math.random() * 5);\n    },\n    generarNumAleatorioParaColores() {\n      let numAleatorio = Math.ceil(Math.random() * 2) - 1;\n      numAleatorio = numAleatorio < 0 ? 0 : numAleatorio;\n      return this.colores[numAleatorio];\n    },\n    validarPremio() {\n      if (this.datosGanadores.numero && this.datosGanadores.color) alert(\"numero y color ganadores\");else if (this.datosGanadores.numero && !this.datosGanadores.color) alert(\"numero ganador\");else if (!this.datosGanadores.numero && this.datosGanadores.color) alert(\"color ganador\");else if (this.datosGanadores.esPar) alert(`el numero ganador es ${this.datosGanadores.esPar ? 'Par' : 'Impar'}`);else alert(\"haz perdido\");\n    },\n    esPar(numero) {\n      return numero % 2 == 0;\n    },\n    calcularGrados(numero) {\n      let grados = 360 / 32;\n      return numero * grados;\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["ruletaDatos","ruletaJuego","name","components","data","datosEmitidos","color","numero","colores","datosGanadores","esPar","methods","datosEmitidosEvento","datos","numGanador","generarNumAleatorio","colorGanador","generarNumAleatorioParaColores","esParGanador","console","log","grados","calcularGrados","$refs","ruletaTablero","iniciarJuego","setTimeout","validarPremio","Math","ceil","random","numAleatorio","alert","computed"],"sources":["src/views/ruleta-juego.vue"],"sourcesContent":["<template>\r\n  <v-row dense justify=\"center\" align=\"start\">\r\n    <v-col cols=\"12\" class=\"titulo mb-8\">\r\n      <h2 class=\"text-center white--text pa-5\">Juego de ruleta</h2>\r\n      {{datosGanadores}}\r\n    </v-col>\r\n    <v-col cols=\"6\" class=\"text-centr\">\r\n      <ruletaDatos @emitirDatos=\"datosEmitidosEvento\" />\r\n    </v-col>\r\n    <v-col cols=\"5\" class=\"text-center\">\r\n      <ruletaJuego ref=\"ruletaTablero\" />\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport ruletaDatos from \"@/components/ruleta-datos.vue\";\r\nimport ruletaJuego from \"@/components/ruleta-indicador.vue\";\r\n\r\nexport default {\r\n  name: \"ruleta-juego\",\r\n\r\n  components: {\r\n    ruletaDatos,\r\n    ruletaJuego,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      datosEmitidos: {\r\n        color: \"S/A\",\r\n        numero: 0,\r\n      },\r\n      colores: [\"#C34A36\", \"#4B4453\"],\r\n      datosGanadores: {\r\n        color: null,\r\n        numero: null,\r\n        esPar: null,\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    datosEmitidosEvento(datos) {\r\n      this.datosGanadores = {};\r\n      this.datosEmitidos = datos;\r\n      let numGanador = this.generarNumAleatorio();\r\n      let colorGanador = this.generarNumAleatorioParaColores();\r\n\r\n      let esParGanador = this.esPar(numGanador);\r\n      console.log(datos.esPar)\r\n      console.log(esParGanador)\r\n\r\n\r\n      if (numGanador == datos.numero) this.datosGanadores.numero = numGanador;\r\n      if (colorGanador == datos.color) this.datosGanadores.color = colorGanador;\r\n      if (esParGanador == datos.esPar) this.datosGanadores.esPar = datos.esPar;\r\n\r\n      let grados = this.calcularGrados(numGanador);\r\n      this.$refs.ruletaTablero.iniciarJuego(grados, () => {\r\n        setTimeout(() => {\r\n          this.validarPremio();\r\n        }, 2100);\r\n      });\r\n    },\r\n    generarNumAleatorio() {\r\n      return Math.ceil(Math.random() * 5);\r\n    },\r\n    generarNumAleatorioParaColores() {\r\n      let numAleatorio = Math.ceil(Math.random() * 2) - 1;\r\n      numAleatorio = numAleatorio < 0 ? 0 : numAleatorio;\r\n      return this.colores[numAleatorio];\r\n    },\r\n    validarPremio() {\r\n      if (this.datosGanadores.numero && this.datosGanadores.color)\r\n        alert(\"numero y color ganadores\");\r\n      else if (this.datosGanadores.numero && !this.datosGanadores.color)\r\n        alert(\"numero ganador\");\r\n      else if (!this.datosGanadores.numero && this.datosGanadores.color)\r\n        alert(\"color ganador\");\r\n      else if (this.datosGanadores.esPar)\r\n        alert(`el numero ganador es ${this.datosGanadores.esPar ? 'Par': 'Impar'}`);\r\n      else alert(\"haz perdido\");\r\n    },\r\n    esPar(numero) {\r\n      return numero % 2 == 0;\r\n    },\r\n    calcularGrados(numero) {\r\n      let grados = 360 / 32;\r\n      return numero * grados;\r\n    },\r\n  },\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style>\r\n.contenedor {\r\n  background: #f6f6f6 !important;\r\n}\r\n.titulo {\r\n  background: rgba(10, 92, 179, 0.977);\r\n}\r\n</style>\r\n"],"mappings":"AAgBA,OAAAA,WAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACAH,WAAA;IACAC;EACA;EAEAG,KAAA;IACA;MACAC,aAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,cAAA;QACAH,KAAA;QACAC,MAAA;QACAG,KAAA;MACA;IACA;EACA;EAEAC,OAAA;IACAC,oBAAAC,KAAA;MACA,KAAAJ,cAAA;MACA,KAAAJ,aAAA,GAAAQ,KAAA;MACA,IAAAC,UAAA,QAAAC,mBAAA;MACA,IAAAC,YAAA,QAAAC,8BAAA;MAEA,IAAAC,YAAA,QAAAR,KAAA,CAAAI,UAAA;MACAK,OAAA,CAAAC,GAAA,CAAAP,KAAA,CAAAH,KAAA;MACAS,OAAA,CAAAC,GAAA,CAAAF,YAAA;MAGA,IAAAJ,UAAA,IAAAD,KAAA,CAAAN,MAAA,OAAAE,cAAA,CAAAF,MAAA,GAAAO,UAAA;MACA,IAAAE,YAAA,IAAAH,KAAA,CAAAP,KAAA,OAAAG,cAAA,CAAAH,KAAA,GAAAU,YAAA;MACA,IAAAE,YAAA,IAAAL,KAAA,CAAAH,KAAA,OAAAD,cAAA,CAAAC,KAAA,GAAAG,KAAA,CAAAH,KAAA;MAEA,IAAAW,MAAA,QAAAC,cAAA,CAAAR,UAAA;MACA,KAAAS,KAAA,CAAAC,aAAA,CAAAC,YAAA,CAAAJ,MAAA;QACAK,UAAA;UACA,KAAAC,aAAA;QACA;MACA;IACA;IACAZ,oBAAA;MACA,OAAAa,IAAA,CAAAC,IAAA,CAAAD,IAAA,CAAAE,MAAA;IACA;IACAb,+BAAA;MACA,IAAAc,YAAA,GAAAH,IAAA,CAAAC,IAAA,CAAAD,IAAA,CAAAE,MAAA;MACAC,YAAA,GAAAA,YAAA,WAAAA,YAAA;MACA,YAAAvB,OAAA,CAAAuB,YAAA;IACA;IACAJ,cAAA;MACA,SAAAlB,cAAA,CAAAF,MAAA,SAAAE,cAAA,CAAAH,KAAA,EACA0B,KAAA,kCACA,SAAAvB,cAAA,CAAAF,MAAA,UAAAE,cAAA,CAAAH,KAAA,EACA0B,KAAA,wBACA,UAAAvB,cAAA,CAAAF,MAAA,SAAAE,cAAA,CAAAH,KAAA,EACA0B,KAAA,uBACA,SAAAvB,cAAA,CAAAC,KAAA,EACAsB,KAAA,8BAAAvB,cAAA,CAAAC,KAAA,2BACAsB,KAAA;IACA;IACAtB,MAAAH,MAAA;MACA,OAAAA,MAAA;IACA;IACAe,eAAAf,MAAA;MACA,IAAAc,MAAA;MACA,OAAAd,MAAA,GAAAc,MAAA;IACA;EACA;EACAY,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}